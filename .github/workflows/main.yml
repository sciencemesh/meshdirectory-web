# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    steps:
      - uses: actions/checkout@v2
      - name: Set up caching
        uses: actions/cache@v2
        with:
          path: |
            **/node_modules
            ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm install -g yarn
      - run: yarn install --frozen-lockfile
      - run: yarn run eslint --if-present
      - run: yarn run build --if-present
      - run: yarn run export --if-present
      - run: git status
      - name: Set RELEASE_VERSION
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        run: |
          echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
          echo $RELEASE_VERSION
      - name: Upload exported app artifact
        uses: actions/upload-artifact@v2
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        with:
          name: meshdirectory-web-${{ env.RELEASE_VERSION }}
          path: out

  publish:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    steps:
      - name: Set RELEASE_VERSION
        run: |
          echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
          echo $RELEASE_VERSION
      - uses: actions/download-artifact@v2
        with:
          name: meshdirectory-web-${{ env.RELEASE_VERSION }}
      - run: ls -R
      - name: Packaging exported site
        run: tar czvf /tmp/meshdirectory-web-${{ env.RELEASE_VERSION }}.tar.gz out
      - name: Publishing exported site to release
        uses: softprops/action-gh-release@v1
        with:
          files: /tmp/meshdirectory-web-${{ env.RELEASE_VERSION }}.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
